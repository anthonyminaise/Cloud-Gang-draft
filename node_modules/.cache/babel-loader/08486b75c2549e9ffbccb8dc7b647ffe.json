{"ast":null,"code":"import _classCallCheck from \"/Users/anthonyminaise/Downloads/CoRate-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anthonyminaise/Downloads/CoRate-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport history from '../history';\nimport auth0 from 'auth0-js';\nimport { AUTH_CONFIG } from './auth0-secrets';\n\nvar Auth =\n/*#__PURE__*/\nfunction () {\n  function Auth() {\n    _classCallCheck(this, Auth);\n\n    this.auth0 = new auth0.WebAuth({\n      domain: AUTH_CONFIG.domain,\n      clientID: AUTH_CONFIG.clientId,\n      redirectUri: AUTH_CONFIG.callbackUrl,\n      responseType: 'token id_token',\n      scope: 'openid'\n    });\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n  }\n\n  _createClass(Auth, [{\n    key: \"login\",\n    value: function login() {\n      this.auth0.authorize();\n    }\n  }, {\n    key: \"handleAuthentication\",\n    value: function handleAuthentication() {\n      var _this = this;\n\n      this.auth0.parseHash(function (err, authResult) {\n        if (authResult && authResult.accessToken && authResult.idToken) {\n          _this.setSession(authResult);\n\n          history.replace('/home');\n        } else if (err) {\n          history.replace('/home');\n          console.log(err);\n          alert(\"Error: \".concat(err.error, \". Check the console for further details.\"));\n        }\n      });\n    }\n  }, {\n    key: \"setSession\",\n    value: function setSession(authResult) {\n      // Set the time that the access token will expire at\n      var expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n      localStorage.setItem('access_token', authResult.accessToken);\n      localStorage.setItem('id_token', authResult.idToken);\n      localStorage.setItem('expires_at', expiresAt); // navigate to the home route\n\n      history.replace('/home');\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      // Clear access token and ID token from local storage\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('id_token');\n      localStorage.removeItem('expires_at'); // navigate to the home route\n\n      history.replace('/home');\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      // Check whether the current time is past the \n      // access token's expiry time\n      var expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n      return new Date().getTime() < expiresAt;\n    }\n  }]);\n\n  return Auth;\n}();\n\nexport { Auth as default };","map":{"version":3,"sources":["/Users/anthonyminaise/Downloads/CoRate-master/src/auth/Auth.js"],"names":["history","auth0","AUTH_CONFIG","Auth","WebAuth","domain","clientID","clientId","redirectUri","callbackUrl","responseType","scope","login","bind","logout","handleAuthentication","isAuthenticated","authorize","parseHash","err","authResult","accessToken","idToken","setSession","replace","console","log","alert","error","expiresAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","removeItem","parse","getItem"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,WAAT,QAA4B,iBAA5B;;IAEqBC,I;;;AASnB,kBAAc;AAAA;;AAAA,SARdF,KAQc,GARN,IAAIA,KAAK,CAACG,OAAV,CAAkB;AACxBC,MAAAA,MAAM,EAAEH,WAAW,CAACG,MADI;AAExBC,MAAAA,QAAQ,EAAEJ,WAAW,CAACK,QAFE;AAGxBC,MAAAA,WAAW,EAAEN,WAAW,CAACO,WAHD;AAIxBC,MAAAA,YAAY,EAAE,gBAJU;AAKxBC,MAAAA,KAAK,EAAE;AALiB,KAAlB,CAQM;AACZ,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKE,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BF,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKG,eAAL,GAAuB,KAAKA,eAAL,CAAqBH,IAArB,CAA0B,IAA1B,CAAvB;AACD;;;;4BAEO;AACN,WAAKZ,KAAL,CAAWgB,SAAX;AACD;;;2CAEsB;AAAA;;AACrB,WAAKhB,KAAL,CAAWiB,SAAX,CAAqB,UAACC,GAAD,EAAMC,UAAN,EAAqB;AACxC,YAAIA,UAAU,IAAIA,UAAU,CAACC,WAAzB,IAAwCD,UAAU,CAACE,OAAvD,EAAgE;AAC9D,UAAA,KAAI,CAACC,UAAL,CAAgBH,UAAhB;;AACApB,UAAAA,OAAO,CAACwB,OAAR,CAAgB,OAAhB;AACD,SAHD,MAGO,IAAIL,GAAJ,EAAS;AACdnB,UAAAA,OAAO,CAACwB,OAAR,CAAgB,OAAhB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACAQ,UAAAA,KAAK,kBAAWR,GAAG,CAACS,KAAf,8CAAL;AACD;AACF,OATD;AAUD;;;+BAEUR,U,EAAY;AACrB;AACA,UAAIS,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAgBX,UAAU,CAACY,SAAX,GAAuB,IAAxB,GAAgC,IAAIC,IAAJ,GAAWC,OAAX,EAA/C,CAAhB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqChB,UAAU,CAACC,WAAhD;AACAc,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiChB,UAAU,CAACE,OAA5C;AACAa,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCP,SAAnC,EALqB,CAMrB;;AACA7B,MAAAA,OAAO,CAACwB,OAAR,CAAgB,OAAhB;AACD;;;6BAEQ;AACP;AACAW,MAAAA,YAAY,CAACE,UAAb,CAAwB,cAAxB;AACAF,MAAAA,YAAY,CAACE,UAAb,CAAwB,UAAxB;AACAF,MAAAA,YAAY,CAACE,UAAb,CAAwB,YAAxB,EAJO,CAKP;;AACArC,MAAAA,OAAO,CAACwB,OAAR,CAAgB,OAAhB;AACD;;;sCAEiB;AAChB;AACA;AACA,UAAIK,SAAS,GAAGC,IAAI,CAACQ,KAAL,CAAWH,YAAY,CAACI,OAAb,CAAqB,YAArB,CAAX,CAAhB;AACA,aAAO,IAAIN,IAAJ,GAAWC,OAAX,KAAuBL,SAA9B;AACD;;;;;;SAzDkB1B,I","sourcesContent":["import history from '../history';\nimport auth0 from 'auth0-js';\nimport { AUTH_CONFIG } from './auth0-secrets';\n\nexport default class Auth {\n  auth0 = new auth0.WebAuth({\n    domain: AUTH_CONFIG.domain,\n    clientID: AUTH_CONFIG.clientId,\n    redirectUri: AUTH_CONFIG.callbackUrl,\n    responseType: 'token id_token',\n    scope: 'openid'\n  });\n\n  constructor() {\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  handleAuthentication() {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n        history.replace('/home');\n      } else if (err) {\n        history.replace('/home');\n        console.log(err);\n        alert(`Error: ${err.error}. Check the console for further details.`);\n      }\n    });\n  }\n\n  setSession(authResult) {\n    // Set the time that the access token will expire at\n    let expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime());\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('id_token', authResult.idToken);\n    localStorage.setItem('expires_at', expiresAt);\n    // navigate to the home route\n    history.replace('/home');\n  }\n\n  logout() {\n    // Clear access token and ID token from local storage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expires_at');\n    // navigate to the home route\n    history.replace('/home');\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the \n    // access token's expiry time\n    let expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n    return new Date().getTime() < expiresAt;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}